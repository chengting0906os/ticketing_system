"""booking new column

Revision ID: 08b5c635cb21
Revises: 9d4ce363d417
Create Date: 2025-09-24 21:11:59.111149

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '08b5c635cb21'
down_revision: Union[str, Sequence[str], None] = '9d4ce363d417'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # 先添加 nullable 欄位，然後更新現有記錄，最後設為 not null
    op.add_column('booking', sa.Column('section', sa.String(length=10), nullable=True))
    op.add_column('booking', sa.Column('subsection', sa.String(length=10), nullable=True))
    op.add_column('booking', sa.Column('ow_number', sa.Integer(), nullable=True))
    op.add_column('booking', sa.Column('seat_number', sa.Integer(), nullable=True))
    op.add_column('booking', sa.Column('quantity', sa.Integer(), nullable=True))

    # 為現有記錄設置預設值
    op.execute("UPDATE booking SET section = '' WHERE section IS NULL")
    op.execute("UPDATE booking SET subsection = '' WHERE subsection IS NULL")
    op.execute('UPDATE booking SET quantity = 1 WHERE quantity IS NULL')

    # 現在可以安全地設為 NOT NULL
    op.alter_column('booking', 'section', nullable=False)
    op.alter_column('booking', 'subsection', nullable=False)
    op.alter_column('booking', 'quantity', nullable=False)
    op.alter_column(
        'booking', 'seat_selection_mode', existing_type=sa.VARCHAR(length=20), nullable=False
    )
    op.drop_column('booking', 'ticket_ids')
    op.drop_index(op.f('ix_ticket_buyer_id'), table_name='ticket')
    op.drop_index(op.f('ix_ticket_event_id'), table_name='ticket')
    op.drop_index(op.f('ix_ticket_status'), table_name='ticket')
    op.alter_column(
        'user',
        'role',
        existing_type=sa.VARCHAR(length=10),
        type_=sa.String(length=20),
        existing_nullable=False,
        existing_server_default=sa.text("'buyer'::character varying"),
    )
    op.drop_column('user', 'updated_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        'user',
        sa.Column(
            'updated_at',
            postgresql.TIMESTAMP(timezone=True),
            server_default=sa.text('now()'),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.alter_column(
        'user',
        'role',
        existing_type=sa.String(length=20),
        type_=sa.VARCHAR(length=10),
        existing_nullable=False,
        existing_server_default=sa.text("'buyer'::character varying"),
    )
    op.create_index(op.f('ix_ticket_status'), 'ticket', ['status'], unique=False)
    op.create_index(op.f('ix_ticket_event_id'), 'ticket', ['event_id'], unique=False)
    op.create_index(op.f('ix_ticket_buyer_id'), 'ticket', ['buyer_id'], unique=False)
    op.add_column(
        'booking',
        sa.Column(
            'ticket_ids',
            postgresql.ARRAY(sa.INTEGER()),
            server_default=sa.text("'{}'::integer[]"),
            autoincrement=False,
            nullable=False,
        ),
    )
    op.alter_column(
        'booking', 'seat_selection_mode', existing_type=sa.VARCHAR(length=20), nullable=True
    )
    op.drop_column('booking', 'quantity')
    op.drop_column('booking', 'seat_number')
    op.drop_column('booking', 'ow_number')
    op.drop_column('booking', 'subsection')
    op.drop_column('booking', 'section')
    # ### end Alembic commands ###

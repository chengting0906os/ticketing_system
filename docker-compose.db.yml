# Standalone Database for Ticketing System
# Purpose: Run PostgreSQL independently from application services
#
# Usage:
#   docker network create ticketing-shared-network
#   docker-compose -f docker-compose.db.yml up -d
#
# Benefits:
#   - Database persists when app services restart
#   - Multiple projects can share this database
#   - Cleaner separation of concerns

services:
  postgres:
    image: postgres:16-alpine
    container_name: ticketing_db_standalone
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ticketing_system_db
      POSTGRES_USER: py_arch_lab
      POSTGRES_PASSWORD: py_arch_lab
    command:
      - "postgres"
      - "-c"
      - "config_file=/etc/postgresql/postgresql.conf"
    volumes:
      - postgres_data_standalone:/var/lib/postgresql/data
      - ./init-test-db.sql:/docker-entrypoint-initdb.d/init-test-db.sql
      - ./postgresql.conf:/etc/postgresql/postgresql.conf:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U py_arch_lab"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - ticketing-shared-network
    restart: unless-stopped

volumes:
  postgres_data_standalone:
    driver: local

networks:
  ticketing-shared-network:
    name: ticketing-shared-network
    driver: bridge

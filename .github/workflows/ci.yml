name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  
jobs:
  lint:
    name: Lint with Ruff
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read Python version
        id: python-version
        run: echo "version=$(cat .python-version)" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python-version.outputs.version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run Ruff check
        run: |
          uv run ruff check . --exit-non-zero-on-fix

      - name: Run Ruff format check
        run: |
          uv run ruff format . --check

  type-check:
    name: Type check with Pyrefly
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read Python version
        id: python-version
        run: echo "version=$(cat .python-version)" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python-version.outputs.version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run Pyrefly type check
        run: |
          uv run pyrefly check

  test:
    name: Run unit tests
    runs-on: ubuntu-latest
    needs: [lint, type-check]  # Only run if lint and type-check pass

    steps:
      - uses: actions/checkout@v4

      - name: Read Python version
        id: python-version
        run: echo "version=$(cat .python-version)" >> $GITHUB_OUTPUT

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ steps.python-version.outputs.version }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --all-extras --dev

      - name: Run unit tests
        run: |
          uv run pytest -m "unit" -v --tb=short